<?php

namespace Database\Factories;

use App\Models\Team;
use App\Models\User;
use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;
use Laravel\Jetstream\Features;

class UserFactory extends Factory
{
    /**
     * The name of the factory's corresponding model.
     *
     * @var string
     */
    protected $model = User::class;

    /**
     * Define the model's default state.
     *
     * @return array
     */
    public function definition()
    {
        // Coordenadas del primer anillo en formato {lat, lng}
        $ringCoords = [
            ['lat' => -17.79283883310329, 'lng' => -63.18510849008656],
            ['lat' => -17.79302286542257, 'lng' => -63.18408688131902],
            ['lat' => -17.79252334868559, 'lng' => -63.18334138302886],
            ['lat' => -17.79283883310329, 'lng' => -63.18284438416913],
            ['lat' => -17.79236560626815, 'lng' => -63.18196083063975],
            ['lat' => -17.79270738133006, 'lng' => -63.18185038644914],
            ['lat' => -17.7922341541465,  'lng' => -63.180745944537975],
            ['lat' => -17.792313025430687, 'lng' => -63.17977955786549],
            ['lat' => -17.791839797201845, 'lng' => -63.17881317119354],
            ['lat' => -17.79202383055093,  'lng' => -63.17806767290341],
            ['lat' => -17.791603182617592, 'lng' => -63.17721173042263],
            ['lat' => -17.791866087692213, 'lng' => -63.17699084204028],
            ['lat' => -17.791524311018833, 'lng' => -63.176521454228066],
            ['lat' => -17.79168205418057,  'lng' => -63.17613489955896],
            ['lat' => -17.791392858278797, 'lng' => -63.175720733842326],
            ['lat' => -17.791524311018833, 'lng' => -63.17500284660028],
            ['lat' => -17.791182533692194, 'lng' => -63.17486479136157],
            ['lat' => -17.791445439386223, 'lng' => -63.174257348310135],
            ['lat' => -17.791077371305974, 'lng' => -63.17400884888026],
            ['lat' => -17.790893336981398, 'lng' => -63.17323573954258],
            ['lat' => -17.790945918235877, 'lng' => -63.17268351858728],
            ['lat' => -17.790525267762007, 'lng' => -63.17251785230049],
            ['lat' => -17.790498977075217, 'lng' => -63.171993242392716],
            ['lat' => -17.79005203479491,  'lng' => -63.171993242392716],
            ['lat' => -17.78955250974643,  'lng' => -63.17149624353296],
            ['lat' => -17.7892107286456,   'lng' => -63.17157907667608],
            ['lat' => -17.7883694185316,   'lng' => -63.17146863248493],
            ['lat' => -17.78797505305154,  'lng' => -63.171689520867275],
            ['lat' => -17.787238901825802, 'lng' => -63.17160668772361],
            ['lat' => -17.786791951386064, 'lng' => -63.17188279820155],
            ['lat' => -17.785792881653776, 'lng' => -63.17179996505841],
            ['lat' => -17.784925263931612, 'lng' => -63.17215890867948],
            ['lat' => -17.784504599276232, 'lng' => -63.17174474296286],
            ['lat' => -17.78387360043662,  'lng' => -63.172296963918185],
            ['lat' => -17.783426641575645, 'lng' => -63.172407408109336],
            ['lat' => -17.78334776636676,  'lng' => -63.17185518715401],
            ['lat' => -17.782743055273016, 'lng' => -63.172435019156865],
            ['lat' => -17.781743962894367, 'lng' => -63.17215890867948],
            ['lat' => -17.780928909710155, 'lng' => -63.17268351858728],
            ['lat' => -17.779772053645786, 'lng' => -63.172296963918185],
            ['lat' => -17.779167330448928, 'lng' => -63.17301485116023],
            ['lat' => -17.77835226551055,  'lng' => -63.172738740682846],
            ['lat' => -17.77761607462942,  'lng' => -63.172876795921525],
            ['lat' => -17.777721244941134, 'lng' => -63.17340140582937],
            ['lat' => -17.777160721182128, 'lng' => -63.173608867850405],
            ['lat' => -17.77631421023507,  'lng' => -63.17351009501425],
            ['lat' => -17.776361238726636, 'lng' => -63.174399050539506],
            ['lat' => -17.77542066655235,  'lng' => -63.174399050539506],
            ['lat' => -17.77551472399253,  'lng' => -63.17548555173609],
            ['lat' => -17.77471523417354,  'lng' => -63.17597941591677],
            ['lat' => -17.775185522735782, 'lng' => -63.17652266651508],
            ['lat' => -17.77509146512233,  'lng' => -63.17755978129405],
            ['lat' => -17.774386031444152, 'lng' => -63.17751039487548],
            ['lat' => -17.77424494437473,  'lng' => -63.17859689607302],
            ['lat' => -17.77499740745938,  'lng' => -63.17869566890916],
            ['lat' => -17.774339002433706, 'lng' => -63.179436465179705],
            ['lat' => -17.774950378609816, 'lng' => -63.179634010851046],
            ['lat' => -17.77424494437473,  'lng' => -63.180424193540176],
            ['lat' => -17.774950378609816, 'lng' => -63.18052296637629],
            ['lat' => -17.774339002433706, 'lng' => -63.18146130831913],
            ['lat' => -17.774856320872615, 'lng' => -63.1815106947367],
            ['lat' => -17.774574147364007, 'lng' => -63.18220210458972],
            ['lat' => -17.775279580299724, 'lng' => -63.18269596877039],
            ['lat' => -17.774809291984994, 'lng' => -63.18328860578626],
            ['lat' => -17.7757028387244,   'lng' => -63.18358492429468],
            ['lat' => -17.775185522735782, 'lng' => -63.18417756131154],
            ['lat' => -17.775890953258283, 'lng' => -63.18447387981898],
            ['lat' => -17.775655810060456, 'lng' => -63.18526406250808],
            ['lat' => -17.776455295671823, 'lng' => -63.185461608180375],
            ['lat' => -17.77598501045098,  'lng' => -63.18649872295934],
            ['lat' => -17.776643409413623, 'lng' => -63.18654810937696],
            ['lat' => -17.776737466210264, 'lng' => -63.1874370649022],
            ['lat' => -17.777348834181367, 'lng' => -63.18738767848363],
            ['lat' => -17.77725477770653,  'lng' => -63.1880297019181],
            ['lat' => -17.77838345213661,  'lng' => -63.18812847475421],
            ['lat' => -17.778242368223047, 'lng' => -63.18857295251635],
            ['lat' => -17.779229953280407, 'lng' => -63.18847417968023],
            ['lat' => -17.77918292554469,  'lng' => -63.188869271024785],
            ['lat' => -17.780029422900967, 'lng' => -63.18842479326264],
            ['lat' => -17.78021753288013,  'lng' => -63.18901743027945],
            ['lat' => -17.781016998081682, 'lng' => -63.188523566098766],
            ['lat' => -17.781346188596103, 'lng' => -63.189066816697064],
            ['lat' => -17.782192675702987, 'lng' => -63.18847417968023],
            ['lat' => -17.782709971404984, 'lng' => -63.189066816697064],
            ['lat' => -17.783227265609042, 'lng' => -63.188671725352506],
            ['lat' => -17.784026717341845, 'lng' => -63.189066816697064],
            ['lat' => -17.785061296626566, 'lng' => -63.18911620311559],
            ['lat' => -17.78473211295824,  'lng' => -63.188523566098766],
            ['lat' => -17.785578584021295, 'lng' => -63.18847417968023],
            ['lat' => -17.78614289583379,  'lng' => -63.18901743027945],
            ['lat' => -17.78694233451688,  'lng' => -63.188918657443324],
            ['lat' => -17.786566128524186, 'lng' => -63.18817786117276],
            ['lat' => -17.78727151411161,  'lng' => -63.1880297019181],
            ['lat' => -17.7875536675666,   'lng' => -63.18862233893492],
            ['lat' => -17.788353099934625, 'lng' => -63.18847417968023],
            ['lat' => -17.788164998522817, 'lng' => -63.187683996992064],
            ['lat' => -17.788729302162935, 'lng' => -63.18728890564749],
            ['lat' => -17.78924657893353,  'lng' => -63.18788154266434],
            ['lat' => -17.790046003722978, 'lng' => -63.18788154266434],
            ['lat' => -17.79046922716317,  'lng' => -63.18704197355761],
            ['lat' => -17.791080548138098, 'lng' => -63.18704197355761],
            ['lat' => -17.791644842564438, 'lng' => -63.187683996992064],
            ['lat' => -17.792397232359846, 'lng' => -63.1874370649022],
            ['lat' => -17.792115086558184, 'lng' => -63.18679504146776],
            ['lat' => -17.793055570829864, 'lng' => -63.18728890564749],
            ['lat' => -17.79286747437189,  'lng' => -63.18679504146776],
            ['lat' => -17.79352581110696,  'lng' => -63.18644933654079],
            ['lat' => -17.79282045022596,  'lng' => -63.18605424519623],
            ['lat' => -17.79291449850453,  'lng' => -63.18407878847539],
        ];
        
        // Elegimos una coordenada aleatoria
        $randomCoord = collect($ringCoords)->random();

        return [
            'ci' => $this->faker->unique()->randomNumber(),
            'name' => $this->faker->name,
            'email' => $this->faker->unique()->safeEmail,
            'ap_paterno' => $this->faker->lastName,
            'ap_materno' => $this->faker->lastName,
            'telefono' => $this->faker->phoneNumber,
            'ubicacion' => $this->faker->address,
            'latitud' => $randomCoord['lat'],
            'longitud' => $randomCoord['lng'],
            'genero' => $this->faker->randomElement(['M', 'F']),
            'fecha_nac' => $this->faker->date,
            'email_verified_at' => now(),
            'password' => bcrypt('password'),
            'remember_token' => Str::random(10),
            'created_at' => now(), // puedes cambiar por fecha aleatoria si quieres
        ];
    
    }

    public function configure()
    {
        return $this->afterCreating(function (User $user) {
            $user->assignRole('Paciente');
        });
    }
    /**
     * Indicate that the model's email address should be unverified.
     *
     * @return \Illuminate\Database\Eloquent\Factories\Factory
     */
    public function unverified()
    {
        return $this->state(function (array $attributes) {
            return [
                'email_verified_at' => null,
            ];
        });
    }

    /**
     * Indicate that the user should have a personal team.
     *
     * @return $this
     */
    public function withPersonalTeam()
    {
        if (!Features::hasTeamFeatures()) {
            return $this->state([]);
        }

        return $this->has(
            Team::factory()
                ->state(function (array $attributes, User $user) {
                    return ['name' => $user->name . '\'s Team', 'user_id' => $user->id, 'personal_team' => true];
                }),
            'ownedTeams'
        );
    }
}
